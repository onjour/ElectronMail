diff --git a/node_modules/proton-bundler/scripts/validateBuild.sh b/node_modules/proton-bundler/scripts/validateBuild.sh
index 6eef523..b016a0d 100755
--- a/node_modules/proton-bundler/scripts/validateBuild.sh
+++ b/node_modules/proton-bundler/scripts/validateBuild.sh
@@ -58,7 +58,7 @@ function main {
   fi;

   if [ "$hasSourceMap" -eq 0 ]; then
-    hasError=true;
+    # hasError=true;
     echo "[error] no SourceMaps found inside the directory: $OUTPUT_DIR";
   fi;

diff --git a/node_modules/proton-shared/lib/helpers/browser.ts b/node_modules/proton-shared/lib/helpers/browser.ts
index cf3991e..8ff16c7 100644
--- a/node_modules/proton-shared/lib/helpers/browser.ts
+++ b/node_modules/proton-shared/lib/helpers/browser.ts
@@ -112,20 +112,10 @@ export const requireDirectAction = () => isSafari() || isFirefox() || isEdge();
  * @links { https://mathiasbynens.github.io/rel-noopener/}
  */
 export const openNewTab = (url: string) => {
-    if (isIE11() || isFirefox()) {
-        const otherWindow = window.open();
-        if (!otherWindow) {
-            return;
-        }
-        otherWindow.opener = null;
-        otherWindow.location.href = url;
-        return;
-    }
-    const anchor = document.createElement('a');
-
-    anchor.setAttribute('rel', 'noreferrer nofollow noopener');
-    anchor.setAttribute('target', '_blank');
-    anchor.href = url;
-
-    return anchor.click();
+    window.dispatchEvent(
+        new CustomEvent(
+            "electron-mail:./node_modules/proton-shared/lib/helpers/browser.ts:openNewTab",
+            {detail: { url }},
+        ),
+    );
 };
diff --git a/node_modules/proton-shared/lib/constants.ts b/node_modules/proton-shared/lib/constants.ts
index 37ec3c0..2d4628a 100644
--- a/node_modules/proton-shared/lib/constants.ts
+++ b/node_modules/proton-shared/lib/constants.ts
@@ -34,42 +34,42 @@ export const APPS = {
 } as const;
 export const APPS_CONFIGURATION = {
     [APPS.PROTONACCOUNT]: {
-        publicPath: '',
-        subdomain: 'account',
+        publicPath: '/account',
+        subdomain: '',
         name: 'Proton Account',
         clientID: 'WebAccount',
         icon: 'protonaccount',
     },
     [APPS.PROTONMAIL]: {
         publicPath: '',
-        subdomain: 'beta',
+        subdomain: '',
         name: 'ProtonMail',
         clientID: 'WebMail',
         icon: 'protonmail',
     },
     [APPS.PROTONCONTACTS]: {
         publicPath: '/contacts',
-        subdomain: 'contacts',
+        subdomain: '',
         name: 'ProtonContacts',
         clientID: 'WebContacts',
         icon: 'protoncontacts',
     },
     [APPS.PROTONDRIVE]: {
         publicPath: '/drive',
-        subdomain: 'drive',
+        subdomain: '',
         name: 'ProtonDrive',
         clientID: 'WebDrive',
         icon: 'protondrive',
     },
     [APPS.PROTONCALENDAR]: {
         publicPath: '/calendar',
-        subdomain: 'calendar',
+        subdomain: '',
         name: 'ProtonCalendar',
         clientID: 'WebCalendar',
         icon: 'protoncalendar',
     },
     [APPS.PROTONVPN_SETTINGS]: {
-        publicPath: '',
+        publicPath: '/settings',
         subdomain: '',
         name: 'ProtonVPN',
         clientID: 'WebVPNSettings',
diff --git a/node_modules/proton-shared/lib/helpers/sentry.js b/node_modules/proton-shared/lib/helpers/sentry.js
index 9c1b5f5..90bfbc7 100644
--- a/node_modules/proton-shared/lib/helpers/sentry.js
+++ b/node_modules/proton-shared/lib/helpers/sentry.js
@@ -1,56 +1,7 @@
-import * as Sentry from '@sentry/browser';
+function main() {

-const isLocalhost = () => document.location.host.startsWith('localhost');
-
-const isProduction = (host) => host === 'mail.protonmail.com' || host === 'account.protonvpn.com';
-
-function main({ SENTRY_DSN, COMMIT_RELEASE, APP_VERSION }) {
-    // No need to configure it if we don't load the DSN
-    if (!SENTRY_DSN || isLocalhost()) {
-        return;
-    }
-
-    const { host } = document.location;
-
-    // Assumes SENTRY_DSN is: https://111b3eeaaec34cae8e812df705690a36@sentry/11
-    // To get https://111b3eeaaec34cae8e812df705690a36@mail.protonmail.com/api/reports/sentry/11
-    const dsn = SENTRY_DSN.replace('sentry', `${host}/api/reports/sentry`);
-
-    Sentry.init({
-        dsn,
-        release: isProduction(host) ? APP_VERSION : COMMIT_RELEASE,
-        environment: host,
-        beforeSend(event) {
-            if (event && 'error' in event && event.error?.stack) {
-                // Filter out broken ferdi errors
-                if (event.error.stack.includes(/ferdi/i)) {
-                    return null;
-                }
-            }
-            return event;
-        },
-        ignoreErrors: [
-            // Ignore random plugins/extensions
-            'top.GLOBALS',
-            'canvas.contentDocument',
-            'MyApp_RemoveAllHighlights',
-            'atomicFindClose',
-            'conduitPage',
-            // https://bugzilla.mozilla.org/show_bug.cgi?id=1678243
-            'XDR encoding failure',
-            'Request timed out',
-            'No network connection',
-            'Failed to fetch',
-            'NetworkError when attempting to fetch resource.',
-            'No network connection',
-        ],
-    });
-
-    Sentry.configureScope((scope) => {
-        scope.setTag('appVersion', APP_VERSION);
-    });
 }

-export const traceError = (e) => !isLocalhost() && Sentry.captureException(e);
+export const traceError = (e) => console.error(e);

 export default main;
